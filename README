This is a basic gesture recognition software for the Kinect.


Dependencies:
-python (2.7+) (not python 3+)
-libfreenect
-opencv (3.0+) (for python)


To run, type into console:
  python main.py


Intended overall method:

The software works by using a depth mask from the Kinect to identify the closest object, and assumes it is a hand.
After this, calibration occurs, where the user holds their hand palm forward and fingers extended to the camera.
A convex hull is drawn around the hand; the highest point on the hull is the middle finger. Other fingers are identified as points relative to this one.
The position of each finger point relative to the bottom of the hand is remembered.
Now, as the hand moves (assumed to stay upright), each of these positions relative to the bottom of the hand is checked to see if a point on the hull is near that position.
If one is, then that point must be that finger on the hand, so that finger must be extended.
If no point is found there, then that finger must be closed. This way, combinations of open and closed fingers can represent commands, along with the hand's position.


Implemented features:
  -produce mask only of close objects
  -finds biggest contour, assumes is hand, draws to screen
  -track bottom corner of hand, represents its position on screen
    -which corner depends on hand used (l/r)
  -function to find fingers (assumes upright open hand facing camera) (use for calibration)
    -takes convex hull of largest contour
    -finds 'unique' points (remove clusters of adjacent points)
    -highest point is middle finger, point to right is index, to left is ring, etc.
    -return dictionary of finger names + coordinates
  -hand class
    -used for calibrating hand and getting dict of open fingers and hand position
    -for tracking gives dict of five bools (key = finger name, val = True if open, else False)
    -fully functional, but assumes that biggest contour is hand
  -functionality for left and right hand, which hand is given at initialization of hand
  -HandStats class
    -augmented hand class able to take samples of fingers and hand position at regular intervals over time
    -can use sampling to infer hand velocity and acceleration vectors
      -acceleration method is inaccurate (assumes acc is constant)


Planned features:
  -able to detect when no hand is present
    -detect multiple hands (?)
  -more robust detection (deal with random noise)
  -gestures used to operate different programs
    -mouse
    -basic game (?)
